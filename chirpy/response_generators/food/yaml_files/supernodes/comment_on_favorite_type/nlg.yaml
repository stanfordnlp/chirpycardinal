subnodes:
  - node_name: custom_dont_know
    entry_conditions:
      flags.has_custom_food: True
      flags.dont_know: True
    response:
      - No worries, it can be difficult to pick just one! Personally, when it comes to
      - val: state.cur_food_entity.talkable_name
      - ", I really like"
      - nlg_helper:
          name: get_custom_question_answer
          args: [state.cur_food_entity.name]

  - node_name: custom_no
    entry_conditions:
      flags.has_custom_food: True
      flags.response_no: True
    response:
      - Okay, no worries. Personally, when it comes to
      - val: state.cur_food_entity.talkable_name
      - ", I really like"
      - nlg_helper:
          name: get_custom_question_answer
          args: [state.cur_food_entity.name]

  - node_name: custom_neural
    entry_conditions:
      flags.has_custom_food: True
      flags.response_no: False
      flags.dont_know: False
    response:
      - nlg_helper:
          name: get_neural_response_food_type
      - Personally, when it comes to
      - val: state.cur_food_entity.talkable_name
      - ", I really like"
      - nlg_helper:
          name: get_custom_question_answer
          args: [state.cur_food_entity.name]

  - node_name: sample_of_same_type
    entry_conditions:
      flags.has_custom_food: False
      flags.response_no: False
      flags.dont_know: False
    response:
      - That totally makes sense! I also really enjoy
      - nlg_helper:
          name: get_user_answer
          args: [state.cur_food_entity.name]
      - Personally, I really like
      - nlg_helper:
          name: sample_from_type
          args: [state.cur_food_entity.name]

