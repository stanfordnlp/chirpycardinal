sname: food_factoid

requirements:
  - state.food__needs_factoid: True
    state.food__needs_exit: False

prompt_subnodes:
  - prompt_node_name: not_known_food
    prompt_entry_conditions:
      prompt_flags.is_known_food: False
    prompt:
      const: None
  - prompt_node_name: comment_on_time_and_place_origin
    prompt_entry_conditions:
      prompt_flags.is_known_food: True
      prompt_flags.has_known_time_origin: True
      prompt_flags.has_known_place_origin: True
    prompt:
      - Did you know that
      - val: state.cur_food_entity.talkable_name
      - inflect:
          inflect_token: was
          inflect_entity: state.cur_food_entity
      - first made in
      - nlg_helper:
          name: get_place_origin_for_food
          args: [state.cur_food_entity.name]
      - around
      - nlg_helper:
          name: get_time_origin_for_food
          args: [state.cur_food_entity]
      - "?"
      - nlg_helper:
          name: get_time_comment_for_food
          args: [state.cur_food_entity]
  - prompt_node_name: comment_on_time_origin
    prompt_entry_conditions:
      prompt_flags.is_known_food: True
      prompt_flags.has_known_time_origin: True
      prompt_flags.has_known_place_origin: False
    prompt:
      - Did you know that
      - val: state.cur_food_entity.talkable_name
      - inflect:
          inflect_token: have
          inflect_entity: state.cur_food_entity
      - been made since
      - nlg_helper:
          name: get_time_origin_for_food
          args: [state.cur_food_entity]
      - "?"
      - nlg_helper:
          name: get_time_comment_for_food
          args: [state.cur_food_entity]
  - prompt_node_name: comment_on_place_origin
    prompt_entry_conditions:
      prompt_flags.is_known_food: True
      prompt_flags.has_known_time_origin: False
      prompt_flags.has_known_place_origin: True
    prompt:
      - Did you know that
      - val: state.cur_food_entity.talkable_name
      - inflect:
          inflect_token: was
          inflect_entity: state.cur_food_entity
      - originally from
      - nlg_helper:
          name: get_place_origin_for_food
          args: [state.cur_food_entity.name]
      - "?"


global_post_supernode_updates:
  state.cur_food_entity:
    val: state.cur_food_entity
  state.food__needs_exit: True
  needs_prompt: True

response_subnodes:
  - response_node_name: thats
    response_entry_conditions:
      response_flags.thats: True
    response:
      - one of:
        - option: Yeah it is, isn't it?
        - option: Yeah, it really is.
      - one of:
        - option:
          - Anyway, I'm feeling hungry now! Thanks for recommending
          - val: state.cur_food_entity.talkable_name
          - "!"
        - option:
          - Anyway, thanks for talking to me about
          - val: state.cur_food_entity.talkable_name
          - . I'll have to get some soon!

  - response_node_name: didnt_know
    response_entry_conditions:
      response_flags.didnt_know: True
    response:
      - one of:
        - option: No worries, not many people do!
        - option: Yeah, it's a little known fact!
      - one of:
        - option:
          - Anyway, I'm feeling hungry now! Thanks for recommending
          - val: state.cur_food_entity.talkable_name
          - "!"
        - option:
          - Anyway, thanks for talking to me about
          - val: state.cur_food_entity.talkable_name
          - . I'll have to get some soon!

  - response_node_name: catch_all
    response_entry_conditions:
      response_flags.thats: False
      response_flags.didnt_know: False
    response:
      - neural_generation:
          prefix: ''
          condition:
            eval: "lambda response: 'agree' in response"
          fallback: That's great to hear.
      - one of:
        - option:
          - Anyway, I'm feeling hungry now! Thanks for recommending
          - val: state.cur_food_entity.talkable_name
          - "!"
        - option:
          - Anyway, thanks for talking to me about
          - val: state.cur_food_entity.talkable_name
          - . I'll have to get some soon!

