locals:
  cur_entity:
    eval: "rg.get_current_entity()"
  lowercased_entity:
    eval: "(rg.get_current_entity() or '').name.lower()"
    
  intro_statement: # Ah yes, potatoes are one of my favorite things to eat up here...
    - one of: 
      - Ah yes,
      - Oh yeah,
    - val: locals.lowercased_entity
    - inflect:
        inflect_token: is
        inflect_entity: locals.cur_entity
    - one of:
      - one of my favorite things to eat up here in the cloud.
      - such an amazing choice. It's one of my favorite foods up here in the cloud.
    
subnodes:
  - node_name: entity_not_found
    entry_conditions:
      is_true: flags.no_food_entity_found
    response: ''
    needs_prompt: True
    state_updates:
      no_entity: True
    exit: True
      
  # Personally, I especially like the peanuts in them, I think it gives them a really nice flavor.
  - node_name: make_ingredient_attribute_comment
    entry_conditions:
      is_value:
        name: flags.best_comment_type
        value: has_ingredient
    response:
      - val: locals.intro_statement
      - Personally, I especially like the
      - nlg_helper:
          name: get_best_attribute_value
          args: [locals.lowercased_entity]
      - ", I think it gives"
      - inflect:
          inflect_token: them
          inflect_entity: locals.cur_entity
      - a really nice flavor. 
    set_state:
      open_ended: True

  # Personally, I especially like its texture, especially how it's so grainy.
  - node_name: make_texture_attribute_comment
    entry_conditions:
      is_value:
        name: flags.best_comment_type
        value: texture
    response:
      - val: locals.intro_statement
      - Personally, I especially like the
      - inflect:
          inflect_token: its
          inflect_entity: locals.cur_entity
      - texture, especially how
      - inflect:
          inflect_token: it's
          inflect_entity: locals.cur_entity
      - so
      - nlg_helper:
          name: get_best_attribute_value
          args: [locals.lowercased_entity]
      - .
    set_state:
      open_ended: True
      
# Personally, I especially like it's especially good as part of a patatas bravas.
  - node_name: make_food_is_an_ingredient_comment
    entry_conditions:
      is_value:
        name: flags.best_comment_type
        value: is_ingredient
    response:
      - val: locals.intro_statement
      - In my opinion, I think
      - inflect:
          inflect_token: it's
          inflect_entity: locals.cur_entity
      - especially good as part of
      - inflect_helper:
          type: a
          str:
            nlg_helper:
              name: sample_food_containing_ingredient
              args: [locals.lowercased_entity]
      - .   # plain_text: .
    set_state:
      open_ended: True

  # I especially love how it's [NEURAL_GEN]...
  - node_name: default
    response: 
    - locals.intro_statement
    - neural_generation:
      prefix: 
        - I especially love how 
        - inflect:
            inflect_token: it's
            inflect_entity: locals.cur_entity
    set_state:
      open_ended: True

