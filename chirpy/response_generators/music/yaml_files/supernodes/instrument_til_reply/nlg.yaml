sname: instrument_til_reply

requirements:
  - state.instrument_til_followup: True
    state.exit_music_rg: False

prompt_subnodes: None

global_post_supernode_updates:
  state.instrument_til_followup: False
  state.continue_after_instrument: True
  state.cur_entity:
    eval: rg.get_instrument_entity()  # TODO: Look at this

response_subnodes:
  - response_node_name: 'thats_cool'
    response_entry_conditions:
      response_flags.thats: True
    response: # {rg.state_manager.current_state.choose_least_repetitive(get_responses_to_thats())}  {wish_I_could_play_instr(rg)}
      - eval: rg.state_manager.current_state.choose_least_repetitive(get_responses_to_thats())  # TODO: Look at this
      - nlg_helper:
          name: wish_I_could_play_instr
  - response_node_name: 'didnt_know'
    response_entry_conditions:
      response_flags.did_not_know: True
    response: # {rg.state_manager.current_state.choose_least_repetitive(get_responses_to_didnt_know())}  {wish_I_could_play_instr(rg)}
      - eval: rg.state_manager.current_state.choose_least_repetitive(get_responses_to_didnt_know())  # TODO: Look at this
      - nlg_helper:
          name: wish_I_could_play_instr

  - response_node_name: 'catch_all'
    response_entry_conditions:
      response_flags.catch_all: True
    response: # {wish_I_could_play_instr(rg)}
      - nlg_helper:
          name: wish_I_could_play_instr
