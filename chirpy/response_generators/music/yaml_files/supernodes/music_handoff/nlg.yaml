sname: music_handoff

requirements:
  - state.go_to_handoff: True
    state.exit_music_rg: False

prompt_subnodes: None

global_post_supernode_updates:
  state.exit_music_rg: True

response_subnodes:
  - response_node_name: cur_song_ent_exists
    response_entry_conditions:
      response_flags.cur_song_ent_exists: True
    response: "{cur_song_ent_exists_response(rg)}"

  - response_node_name: song_slots_exists
    response_entry_conditions:
      response_flags.song_slots_exists: True
    response: "{song_slots_exists_response(rg)}"

  - response_node_name: thats
    response_entry_conditions:
      response_flags_thats: True
    response: "{thats_response(rg)}"

  - response_node_name: didnt_know
    response_entry_conditions:
      response_flags_didnt_know: True
    response: "{didnt_know_response(rg)}"

  - response_node_name: answered_no
    response_entry_conditions:
      response_flags.answered_no: True
    response: >-
      {rg.state_manager.current_state.choose_least_repetitive(
        ["It's okay!",
         "Don't worry about it!"]
      )}

  - response_node_name: answered_yes
    response_entry_conditions:
      response_flags.answered_yes: True
    response: >-
      {rg.state_manager.current_state.choose_least_repetitive(
        ['I know, right?',
         "It's great that you do!"]
      )}

  - response_node_name: question
    response_entry_conditions:
      response_flags.question: True
    response: >-
      {rg.state_manager.current_state.choose_least_repetitive(
        ["Oh I'm not too sure about that.",
          "Ah I'm not sure, I'll need to check about that.",
          "Oh hmm, I'm not too sure about that.",
          "Oh dear I don't know, I'll need to find out."]
      )}

  - response_node_name: opinion
    response_entry_conditions:
      response_flags.opinion: True
    response: >-
      {rg.state_manager.current_state.choose_least_repetitive(
        ['Yeah I totally agree with that!',
         'Me too!',
         'Absolutely!']
      )}

  - response_node_name: til_only
    response_entry_conditions:
      response_flags.til_only: True
    response: >-
      {rg.state_manager.current_state.choose_least_repetitive(
        ['I thought that was an interesting tidbit!',
         'I hope you found that interesting!']
      )}

  - response_node_name: catch_all
    response_entry_conditions:
      response_flags.catch_all: True
    response: >-
      {rg.state_manager.current_state.choose_least_repetitive(
        ["That's great!",
            'Awesome!',
            'Cool!']
      )}

